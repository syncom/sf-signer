on:
  push:
    tags:
      - 'v*'
name: "Release Deployable"
jobs:
  release-sfsigner:
    name: "Release sfsigner"
    runs-on: ${{ matrix.os }}
    environment: "release"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Install dependencies
        run: |
          set -euxo pipefail
          if [ ${{ matrix.os }} = 'ubuntu-latest' ]; then
            sudo apt-get update
          fi
          sudo curl -sSL https://get.haskellstack.org/ | sh -s - -f
          stack --version
          if [ ${{ matrix.os }} = 'macos-latest' ]; then
            # for `sha256sum`
            brew install coreutils
          fi

      - name: "Checkout code"
        uses: actions/checkout@v3
        with:
          # Fetch all history for all tags and branches
          fetch-depth: 0

      - name: Set env, initialize Hermit
        run: |
          set -euxo pipefail
          # set RELEASE_VERSION as tag version
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "OS=$(echo $(uname -s) | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "ARCH=$(uname -m)" >> $GITHUB_ENV
          ./bin/hermit env -r >> $GITHUB_ENV

      - name: Build at tagged revision
        run: |
          set -euxo pipefail
          cd ${{ github.workspace }}
          git checkout tags/v"${RELEASE_VERSION}" -b v"${RELEASE_VERSION}"
          # Linking statically for Linux, dynamically otherwise
          if [ ${{ matrix.os }} = 'ubuntu-latest' ]; then
            make static-build
          else
            make build
          fi
          mv build/sfsigner build/sfsigner-"$OS"-"$ARCH"

      - name: Sign artifact using Hermit managed sfsigner
        run: |
          set -euxo pipefail
          cd ${{ github.workspace }}
          EXE="build/sfsigner-${OS}-${ARCH}"
          sfsigner version
          sfsigner sign -c data/certs/sfsigner.pem -o "${EXE}.sig" "${EXE}"
          # Self-check: verify signature
          sfsigner verify -p "${EXE}" -s "${EXE}.sig" -c data/certs/sfsigner.pem -t data/ca.pem
        env:
          SFSIGNER_PRIVATE_KEY: ${{ secrets.SFSIGNER_PRIVATE_KEY }}

      - name: Ensure app version matches tag version
        run: |
          set -euxo pipefail
          APP_VERSION="$(build/sfsigner-"$OS"-"$ARCH" version)"
          if [ "$APP_VERSION" != "$RELEASE_VERSION" ]; then
            echo "version (${APP_VERSION}) in package.yaml and tagged version (${RELEASE_VERSION}) mismatch"
            exit 1
          fi

      - name: "Release versioned"
        # v1.10.0
        uses: ncipollo/release-action@58ae73b360456532aafd58ee170c045abbeaee37
        with:
          allowUpdates: true
          artifacts: "build/*"
          token: ${{ secrets.GITHUB_TOKEN }}
